
{
    "_schemaVersion": "1.0.0",
    "read_conf":{
        "inputs":[
            {"name":"confFile",  "kind":"required", "type":["file=*.conf"], "purpose":"Configure filename"}],
        "outputs":[
            {"name":"conf_para(1*1)", "type":["struct"], "purpose":"Configure Structure (1*1)"},
            {"name":"conf_para(name,value)", "type":["struct"], "purpose":"Configure Structure (n*1)"}]},
    "read_conf":{
        "inputs":[
            {"name":"confFile",  "kind":"required", "type":["file"], "purpose":"Configure filename"},
            {"name":"key",  "kind":"required", "type":["char"], "purpose":"key name"}],
        "outputs":[
            {"name":"Key of Value", "purpose":"Key of Value"},
            {"name":"conf_para(1*1)", "type":["struct"], "purpose":"Configure Structure (1*1)"},
            {"name":"conf_para(name,value)", "type":["struct"], "purpose":"Configure Structure (n*1)"}]},
    "Mncload":{
        "inputs":[
            {"name":"ncFile",  "kind":"required", "type":["file=*.nc"], "purpose":"Filename of NETCDF file"},
            {"name":"varName",  "kind":"positional", "type":["char"], "purpose":"Variable name"}],
        "outputs":[
            {"name":"var", "type":["struct"], "purpose":"Variable Structure"}]},
    "clm":{
        "inputs":[
            {"name":"cmd",  "kind":"ordered", "type":["char","choices={'clear','clc','close all'}"], "purpose":"Command of MATLAB"}]},
    "del_quotation":{
        "inputs":[
            {"name":"Text",  "kind":"required", "type":["char","string"], "purpose":"Text with quotation"}],
        "outputs":[
            {"name":"Text", "type":["char"], "purpose":"Text without quotation"}]},
    "del_filesep":{
        "inputs":[
            {"name":"Path",  "kind":"required", "type":["folder"], "purpose":"Path with filesep", "repeating":true}],
        "outputs":[
            {"name":"Path", "type":["char"], "purpose":"Text without separator", "repeating":true}]},
    "grep":{
        "inputs":[
            {"name":"File",  "kind":"required", "type":["file"], "purpose":"Filename"},
            {"name":"Text",  "kind":"required", "type":["char","string"], "purpose":"Text to be searched"}],
        "outputs":[
            {"name":"Searched contents", "type":["cell"], "purpose":"Searched contents"},
            {"name":"Lines id", "type":["scalar"], "purpose":"Lines id"}]},
    "input_yn":{
        "inputs":[
            {"name":"Prompt",  "kind":"required", "type":["char","string"], "purpose":"Prompt, tip or question"}],
        "outputs":[
            {"name":"Answer", "type":["logical","scalar"], "purpose":"true or false"}]},
    "is_number":{
        "inputs":[
            {"name":"Text",  "kind":"required", "type":["char","string"], "purpose":"Text to be judged"}],
        "outputs":[
            {"name":"Answer", "type":["logical","scalar"], "purpose":"Number or not"}]},
    "json_load":{
        "inputs":[
            {"name":"jsonFile",  "kind":"required", "type":["file"], "purpose":"Filename of JSON file"},
            {"name":"method",  "kind":"namevalue", "type":["char","choices={'MATLAB','jsonlab'}"], "purpose":"Method of loading json"}],
        "outputs":[
            {"name":"jdata", "type":["struct"], "purpose":"JSON Structure"}]},
    "json_to_struct":{
        "inputs":[
            {"name":"Text",  "kind":"required", "type":["char","string"], "purpose":"Text of JSON"}],
        "outputs":[
            {"name":"jsonData", "type":["struct"], "purpose":"JSON Structure"}]},
    "json_to_struct":{
        "inputs":[
            {"name":"Text",  "kind":"required", "type":["char","string"], "purpose":"Text of JSON"},
            {"name":"key",  "kind":"required", "type":["char","string"], "purpose":"key name to be searched"}],
        "outputs":[
            {"name":"value", "type":["char","string"], "purpose":"Searched value"},
            {"name":"jsonData", "type":["struct"], "purpose":"JSON Structure"}]},
    "KeyValue2Struct":{
        "inputs":[
            {"name":"Key cell",  "kind":"required", "type":["cell"], "purpose":"Keys(Format:cell)"},
            {"name":"Value cell",  "kind":"required", "type":["cell"], "purpose":"Values(Format:cell)"}],
        "outputs":[
            {"name":"Struct(1*1)", "type":["struct"], "purpose":"Strucct (1*1)"},
            {"name":"Struct(name,value)", "type":["struct"], "purpose":"Strucct (n*1)"}]},
    "KeyValue2Struct":{
        "inputs":[
            {"name":"Key cell",  "kind":"required", "type":["cell"], "purpose":"Keys(Format:cell)"},
            {"name":"Value cell",  "kind":"required", "type":["cell"], "purpose":"Values(Format:cell)"},
            {"name":"key_searched",  "kind":"required", "type":["char","string"], "purpose":"key name to be searched"}],
        "outputs":[
            {"name":"Key of Value", "purpose":"Key of Value"},
            {"name":"Struct(1*1)", "type":["struct"], "purpose":"Strucct (1*1)"},
            {"name":"Struct(name,value)", "type":["struct"], "purpose":"Strucct (n*1)"}]},
    "listStr_to_cell":{
        "inputs":[
            {"name":"List text",  "kind":"required", "type":["char","string"], "purpose":"List test"}],
        "outputs":[
            {"name":"Cell", "type":["cell"], "purpose":"Cell"}]},
    "listStr_to_cell":{
        "inputs":[
            {"name":"List text",  "kind":"required", "type":["char","string"], "purpose":"List test"},
            {"name":"Index",  "kind":"required", "type":["numeric"], "purpose":"index of list"}],
        "outputs":[
            {"name":"Index of value", "type":["char","string"], "purpose":"Index of list"},
            {"name":"Cell", "type":["cell"], "purpose":"Cell"}]},
    "makedirs":{
        "inputs":[
            {"name":"Folder path",  "kind":"required", "type":["folder"], "purpose":"Folder path", "repeating":true}]},
    "nr":{
        "inputs":[
            {"name":"netCDF file",  "kind":"required", "type":["file=*.nc"], "purpose":"Filename of NETCDF file"},
            {"name":"Varname",  "kind":"required", "type":["char","string"], "purpose":"Variable name"}],
        "outputs":[
            {"name":"Variable", "type":["integer"], "purpose":"Variable of reading"}]},
    "osprint":{
        "inputs":[
            {"name":"Message", "kind":"required", "type":["char","string"], "purpose":"Message to be printed", "repeating":true}]},
    "osprint2":{
        "inputs":[
            {"name":"Log level",  "kind":"required", "type":["char","choices={'DEBUG','INFO','WARNING','ERROR','CRACTICAL'}"], "purpose":"Level of log"},
            {"name":"Message",  "kind":"required", "type":["char","string"], "purpose":"Message to be printed"},
            {"name":"newline",  "kind":"namevalue", "type":["logical","scalar"], "purpose":"Newline or not"},
            {"name":"ddt_log",  "kind":"namevalue", "type":["logical","scalar"], "purpose":"Append ddt or not"},
            {"name":"output",  "kind":"namevalue", "type":["char"], "purpose":"'screen' or Filename to be printed"}]},
    "replace_para":{
        "inputs":[
            {"name":"Input parameter",  "kind":"required", "type":["char","string"], "purpose":"Text or Struct"},
            {"name":"Replaced_str",  "kind":"required", "type":["char","string"], "purpose":"ymd in ${ymd}$"},
            {"name":"new_str",  "kind":"required", "type":["char","string"], "purpose":"ymd --> 20230101"}],
        "outputs":[
            {"name":"Outvalue", "type":["char","string"], "purpose":"New value"}]},
    "replace_para":{
        "inputs":[
            {"name":"Input parameter",  "kind":"required", "type":["struct"], "purpose":"Text or Struct"},
            {"name":"Replaced_str",  "kind":"required", "type":["char","string"], "purpose":"ymd in ${ymd}$"},
            {"name":"new_str",  "kind":"required", "type":["char","string"], "purpose":"ymd --> 20230101"}],
        "outputs":[
            {"name":"Outvalue", "type":["struct"], "purpose":"New value"}]},
    "rmfiles":{
        "inputs":[
            {"name":"File",  "kind":"required", "type":["file"], "purpose":"Filename", "repeating":true}]},
    "readlink":{
        "inputs":[
            {"name":"File",  "kind":"required", "type":["file"], "purpose":"Filename", "repeating":false}],
        "outputs":[
            {"name":"YN", "type":["logical"], "purpose":"Exist or not"},
            {"name":"Origin file", "type":["file"], "purpose":"Origin file", "repeating":false}]},
    "limit_var":{
        "inputs":[
            {"name":"Var",  "kind":"required", "type":["numeric"], "purpose":"Variable"},
            {"name":"range",  "kind":"required", "type":["numeric"], "purpose":"Range of variable"}],
        "outputs":[
            {"name":"Var", "type":["scalar"], "purpose":"Variable"}]},
    "set_proxy":{
        "inputs":[
            {"name":"Stage",  "kind":"required", "type":["scalar","logical"], "purpose":"Whether to set proxy"},
            {"name":"Host",  "kind":"namevalue", "type":["char","string"], "purpose":"Proxy host"},
            {"name":"Port",  "kind":"namevalue", "type":["char","string"], "purpose":"Proxy port"}]},
    "ll":{"inputs":[],"outputs":[]},
    "closefile":{
        "inputs":[],
        "outputs":[
            {"name":"Struct been closed", "type":["struct"], "purpose":"Struct been closed"}]},
    "c_load_model":{
        "inputs":[
            {"name":"fin",  "kind":"required", "type":["file=*.nc"], "purpose":"Filename(nc)"},
            {"name":"Global",  "kind":"flag", "type":["choices={'Global'}", "logical"], "purpose":"Global or not"},
            {"name":"Coordinate",  "kind":"namevalue", "type":["choices={'geo','xy'}"], "purpose":"Coordinate"},
            {"name":"MaxLon","kind":"namevalue","type":["scalar","choices={180,360}"],"purpose":"MaxLon"}],
        "outputs":[
            {"name":"GridStruct", "type":["struct"], "purpose":"Model grid struct"},
            {"name":"VarStruct", "type":["struct"], "purpose":"Model variable struct"},
            {"name":"Ttimes", "type":["Mdatetime"], "purpose":"Model Ttimes"}]},
    "c_load_model":{
        "inputs":[
            {"name":"fin",  "kind":"required", "type":["file=*.msh,*.2dm"], "purpose":"Filename(2dm,msh)"},
            {"name":"Global",  "kind":"flag", "type":["choices={'Global'}", "logical"], "purpose":"Global or not"},
            {"name":"MaxLon","kind":"namevalue","type":["scalar","choices={180,360}"],"purpose":"MaxLon"}],
        "outputs":[
            {"name":"GridStruct", "type":["struct"], "purpose":"Model grid struct"},
            {"name":"VarStruct", "type":["struct"], "purpose":"Model variable struct"},
            {"name":"Ttimes", "type":["Mdatetime"], "purpose":"Model Ttimes"}]},
    "calc_validation":{
        "inputs":[
            {"name":"Model",  "kind":"required", "type":["struct"], "purpose":"Model Data"},
            {"name":"Observation",  "kind":"required", "type":["struct"], "purpose":"Real Data"}],
        "outputs":[
            {"name":"Validation", "type":["struct"], "purpose":"Validation Struct"}]},
    "calc_casfco2":{
        "inputs":[
            {"name":"windSpeed",  "kind":"required", "type":["scalar"], "purpose":"Wind Speed"},
            {"name":"SST",  "kind":"required", "type":["scalar"], "purpose":"SST"},
            {"name":"SSS",  "kind":"required", "type":["scalar"], "purpose":"SSS"},
            {"name":"D_pCO2",  "kind":"required", "type":["scalar"], "purpose":"D_pCO2"}],
        "outputs":[
            {"name":"FCO2", "type":["scalar"], "purpose":"scalar"}]}
}
